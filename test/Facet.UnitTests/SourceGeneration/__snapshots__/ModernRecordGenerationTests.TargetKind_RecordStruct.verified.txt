[
  {
    HintName: ModernEntityDto.g.cs,
    Source:
//     This code was generated by the Facet source generator.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using System.Linq.Expressions;

public partial record struct ModernEntityDto(required string Id, required string Name, string Description, global::System.DateTime CreatedAt, bool IsActive);
public partial record struct ModernEntityDto
{

    /// <summary>
    /// Initializes a new instance of the <see cref="ModernEntityDto"/> class from the specified <see cref="global::ModernEntity"/>.
    /// </summary>
    /// <param name="source">The source <see cref="global::ModernEntity"/> object to copy data from.</param>
    public ModernEntityDto(global::ModernEntity source) : this(source.Id, source.Name, source.Description, source.CreatedAt, source.IsActive)
    {
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="ModernEntityDto"/> class with default values.
    /// </summary>
    /// <remarks>
    /// This constructor is useful for unit testing, object initialization, and scenarios
    /// where you need to create an empty instance and populate properties later.
    /// </remarks>
    public ModernEntityDto() : this(string.Empty, string.Empty, string.Empty, default, false)
    {
    }

    /// <summary>
    /// Gets the projection expression for converting <see cref="global::ModernEntity"/> to <see cref="ModernEntityDto"/>.
    /// Use this for LINQ and Entity Framework query projections.
    /// </summary>
    /// <value>An expression tree that can be used in LINQ queries for efficient database projections.</value>
    /// <example>
    /// <code>
    /// var dtos = context.global::ModernEntitys
    ///     .Where(x => x.IsActive)
    ///     .Select(ModernEntityDto.Projection)
    ///     .ToList();
    /// </code>
    /// </example>
    public static Expression<Func<global::ModernEntity, ModernEntityDto>> Projection =>
        source => new ModernEntityDto(source);
}

  }
]