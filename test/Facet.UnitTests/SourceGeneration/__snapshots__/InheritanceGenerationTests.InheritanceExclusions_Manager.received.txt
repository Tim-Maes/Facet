[
  {
    HintName: ManagerDto.g.cs,
    Source:
//     This code was generated by the Facet source generator.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using System.Linq.Expressions;

public partial class ManagerDto
{
    public string TeamName { get; set; }
    public int TeamSize { get; set; }
    public string EmployeeId { get; set; }
    public string Department { get; set; }
    public global::System.DateTime HireDate { get; set; }
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public string DisplayName { get; set; }
    public int Id { get; set; }
    public global::System.DateTime CreatedAt { get; set; }
    public global::System.DateTime UpdatedAt { get; set; }

    /// <summary>
    /// Initializes a new instance of the <see cref="ManagerDto"/> class from the specified <see cref="global::Manager"/>.
    /// </summary>
    /// <param name="source">The source <see cref="global::Manager"/> object to copy data from.</param>
    public ManagerDto(global::Manager source)
    {
        this.TeamName = source.TeamName;
        this.TeamSize = source.TeamSize;
        this.EmployeeId = source.EmployeeId;
        this.Department = source.Department;
        this.HireDate = source.HireDate;
        this.FirstName = source.FirstName;
        this.LastName = source.LastName;
        this.DisplayName = source.DisplayName;
        this.Id = source.Id;
        this.CreatedAt = source.CreatedAt;
        this.UpdatedAt = source.UpdatedAt;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="ManagerDto"/> class with default values.
    /// </summary>
    /// <remarks>
    /// This constructor is useful for unit testing, object initialization, and scenarios
    /// where you need to create an empty instance and populate properties later.
    /// </remarks>
    public ManagerDto()
    {
    }

    /// <summary>
    /// Gets the projection expression for converting <see cref="global::Manager"/> to <see cref="ManagerDto"/>.
    /// Use this for LINQ and Entity Framework query projections.
    /// </summary>
    /// <value>An expression tree that can be used in LINQ queries for efficient database projections.</value>
    /// <example>
    /// <code>
    /// var dtos = context.global::Managers
    ///     .Where(x => x.IsActive)
    ///     .Select(ManagerDto.Projection)
    ///     .ToList();
    /// </code>
    /// </example>
    public static Expression<Func<global::Manager, ManagerDto>> Projection =>
        source => new ManagerDto
        {
            TeamName = source.TeamName,
            TeamSize = source.TeamSize,
            EmployeeId = source.EmployeeId,
            Department = source.Department,
            HireDate = source.HireDate,
            FirstName = source.FirstName,
            LastName = source.LastName,
            DisplayName = source.DisplayName,
            Id = source.Id,
            CreatedAt = source.CreatedAt,
            UpdatedAt = source.UpdatedAt
        };
}

  }
]